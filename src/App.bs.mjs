// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "@davesnx/styled-ppx/emotion/CssJs.bs.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Button from "./Button.bs.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as JsxRuntime from "react/jsx-runtime";

function getOrEmpty(str) {
  if (str !== undefined) {
    return " " + str;
  } else {
    return "";
  }
}

var deleteProp = ((newProps, key) => delete newProps[key]);

var styles = CssJs.style([
      CssJs.label("Div"),
      CssJs.height({
            NAME: "vh",
            VAL: 50
          }),
      CssJs.width({
            NAME: "vw",
            VAL: 100
          }),
      CssJs.display("flex"),
      CssJs.alignItems("center"),
      CssJs.justifyContent("center"),
      CssJs.textDecoration("lineThrough"),
      CssJs.unsafe("lineBreak", "loose")
    ]);

function make(props) {
  var className = styles + getOrEmpty(props.className);
  var stylesObject = {
    className: className,
    ref: props.innerRef
  };
  var newProps = Object.assign({}, props, stylesObject);
  deleteProp(newProps, "innerRef");
  return React.createElement("div", newProps);
}

function App(props) {
  var match = React.useState(function () {
        return 0;
      });
  var setCount = match[1];
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "What is this about??",
                      className: "text-3xl font-semibold"
                    }),
                JsxRuntime.jsx("p", {
                      children: "This is a simple template for a Vite project using ReScript & Tailwind CSS."
                    }),
                JsxRuntime.jsx("h2", {
                      children: "Fast Refresh Test",
                      className: "text-2xl font-semibold mt-5"
                    }),
                JsxRuntime.jsx(Button.make, {
                      children: Caml_option.some("count is " + match[0].toString() + ""),
                      onClick: (function (param) {
                          Curry._1(setCount, (function (count) {
                                  return count + 1 | 0;
                                }));
                        })
                    }),
                JsxRuntime.jsxs("p", {
                      children: [
                        "Edit ",
                        JsxRuntime.jsx("code", {
                              children: "src/App.res"
                            }),
                        " and save to test Fast Refresh."
                      ]
                    }),
                JsxRuntime.jsx(make, {
                      children: "This is styled-ppx example"
                    })
              ],
              className: "p-6"
            });
}

var make$1 = App;

export {
  make$1 as make,
}
/* styles Not a pure module */
